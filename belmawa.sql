DROP DATABASE IF EXISTS belmawa;

CREATE DATABASE IF NOT EXISTS belmawa;

USE belmawa;

CREATE TABLE users (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    email VARCHAR(50) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    attempt_login TINYINT DEFAULT 0,
    attempt_login_active DATETIME,
    last_login DATETIME,
    email_confirm_at DATETIME,
    is_active TINYINT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE
);

-- CREATE TABLE provinces (
-- 	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
--     name VARCHAR(100) NOT NULL UNIQUE,
--     created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
--     created_by INT UNSIGNED NOT NULL,
--     updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
--     updated_by INT UNSIGNED NOT NULL,
--     PRIMARY KEY(id),
-- 	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
-- 	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE
-- );

-- CREATE TABLE cities (
-- 	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
--     name VARCHAR(100) NOT NULL UNIQUE,
--     province_id INT UNSIGNED NOT NULL,
--     created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
--     created_by INT UNSIGNED NOT NULL,
--     updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
--     updated_by INT UNSIGNED NOT NULL,
--     PRIMARY KEY(id),
-- 	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
-- 	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE,
--     FOREIGN KEY(province_id) REFERENCES provinces(id) ON UPDATE CASCADE
-- );

CREATE TABLE nationalities (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL UNIQUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE
);

CREATE TABLE profiles (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    user_id INT UNSIGNED NOT NULL,
    name VARCHAR(255) NOT NULL,
    gender CHAR(1) NOT NULL,
    place_of_birth VARCHAR(255) NOT NULL,
    date_of_birth DATE NOT NULL,
    address VARCHAR(255) NOT NULL,
   --  city_id INT UNSIGNED NOT NULL,
    phone_number VARCHAR(50) NOT NULL,
	nationality_id INT UNSIGNED NOT NULL,
    identity_number VARCHAR(50) NOT NULL UNIQUE,
    nidn VARCHAR(20) NOT NULL UNIQUE,
    bank_account_number VARCHAR(50) NOT NULL,
    bank_name VARCHAR(50) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(user_id) REFERENCES users(id) ON UPDATE CASCADE,
	-- FOREIGN KEY(city_id) REFERENCES cities(id) ON UPDATE CASCADE,
	FOREIGN KEY(nationality_id) REFERENCES nationalities(id) ON UPDATE CASCADE
);


CREATE TABLE attachment_types (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE
);

CREATE TABLE attachments (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	-- UNIQUE (?) 
    label VARCHAR(100) NOT NULL UNIQUE,
    -- UNIQUE (?) 
    name_input VARCHAR(100) NOT NULL UNIQUE,
    attachment_type_id INT UNSIGNED NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(attachment_type_id) REFERENCES attachment_types(id) ON UPDATE CASCADE
);

CREATE TABLE attachment_placements (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    attachment_id INT UNSIGNED NOT NULL,
    -- UNIQUE (?)
    slug VARCHAR(100) NOT NULL UNIQUE,
    is_required TINYINT NOT NULL,
    is_active TINYINT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(attachment_id) REFERENCES attachments(id) ON UPDATE CASCADE
);

CREATE TABLE attachment_upload_mappings (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	attachment_id INT UNSIGNED NOT NULL,
    ref_table VARCHAR(100) NOT NULL,
    ref_id INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(attachment_id) REFERENCES attachments(id) ON UPDATE CASCADE
);

CREATE TABLE file_locations (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	location_path VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE
);

CREATE TABLE attachment_uploads (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	attachment_upload_mapping_id INT UNSIGNED NOT NULL,
	file_location_id INT UNSIGNED NOT NULL,
    path VARCHAR(255) NOT NULL,
    mimetype VARCHAR(50) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(attachment_upload_mapping_id) REFERENCES attachment_upload_mappings(id) ON UPDATE CASCADE,
	FOREIGN KEY(file_location_id) REFERENCES file_locations(id) ON UPDATE CASCADE
);

CREATE TABLE menu_groups (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL UNIQUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE
);

CREATE TABLE permissions (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	name VARCHAR(100) NOT NULL UNIQUE,
	slug VARCHAR(100) NOT NULL UNIQUE,
    -- Nullable (?)
    description VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE
);

CREATE TABLE menus (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	menu_group_id INT UNSIGNED NOT NULL,
	permission_id INT UNSIGNED NOT NULL,
    name VARCHAR(100) NOT NULL UNIQUE,
    link VARCHAR(255) NOT NULL,
    route VARCHAR(255) NOT NULL,
    status TINYINT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(menu_group_id) REFERENCES menu_groups(id) ON UPDATE CASCADE,
	FOREIGN KEY(permission_id) REFERENCES permissions(id) ON UPDATE CASCADE
);

CREATE TABLE roles (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL UNIQUE,
    place VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE
);

CREATE TABLE role_permissions (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	role_id INT UNSIGNED NOT NULL,
	permission_id INT UNSIGNED NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(role_id) REFERENCES roles(id) ON UPDATE CASCADE,
	FOREIGN KEY(permission_id) REFERENCES permissions(id) ON UPDATE CASCADE
);

CREATE TABLE user_roles (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	user_id INT UNSIGNED NOT NULL,
	role_id INT UNSIGNED NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(user_id) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(role_id) REFERENCES roles(id) ON UPDATE CASCADE
);

CREATE TABLE faqs (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    title VARCHAR(255) NOT NULL,
    content TEXT NOT NULL,
    status TINYINT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE
);

CREATE TABLE countries (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL UNIQUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE
);

CREATE TABLE evaluator_countries (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	user_id INT UNSIGNED NOT NULL,
	country_id INT UNSIGNED NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(user_id) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(country_id) REFERENCES countries(id) ON UPDATE CASCADE
);

CREATE TABLE specialities (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL UNIQUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE
);

CREATE TABLE evaluator_specialities (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	user_id INT UNSIGNED NOT NULL,
	speciality_id INT UNSIGNED NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(user_id) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(speciality_id) REFERENCES specialities(id) ON UPDATE CASCADE
);

CREATE TABLE forget_passwords (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    otp VARCHAR(255) NOT NULL UNIQUE,
	user_id INT UNSIGNED NOT NULL,
	expired_at DATETIME NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(user_id) REFERENCES users(id) ON UPDATE CASCADE
);

CREATE TABLE notifications (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    title VARCHAR(255) NOT NULL,
    content TEXT NOT NULL,
    -- Set default to 0 ? New Notif always unseen
    is_seen TINYINT DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE
);

CREATE TABLE required_documents (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    ref_table VARCHAR(100) NOT NULL,
    ref_id INT UNSIGNED NOT NULL,
    attachment_id INT UNSIGNED NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(attachment_id) REFERENCES attachments(id) ON UPDATE CASCADE
);

CREATE TABLE service_schedules (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    start_date DATETIME NOT NULL,
    end_date DATETIME NOT NULL,
    description VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE
);

CREATE TABLE service_level_agreements (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	user_id INT UNSIGNED NOT NULL,
    description VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(user_id) REFERENCES users(id) ON UPDATE CASCADE
);

CREATE TABLE education_locations (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL UNIQUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE
);

CREATE TABLE institution_types (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL UNIQUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE
);

CREATE TABLE institutions (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    country_id INT UNSIGNED NOT NULL,
    institution_type_id INT UNSIGNED NOT NULL,
    -- 100 enough? unique?
    name VARCHAR(100) NOT NULL UNIQUE,
    -- 255 to much?
    address VARCHAR(255) NOT NULL,
    -- 100 enough?
    city VARCHAR(100) NOT NULL,
    -- unique?
    postal_code VARCHAR(10) NOT NULL,
    -- unique?
    email VARCHAR(100) NOT NULL,
    website VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(institution_type_id) REFERENCES institution_types(id) ON UPDATE CASCADE
);

CREATE TABLE study_programs (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL UNIQUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE
);

CREATE TABLE institution_study_programs (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    institution_id INT UNSIGNED NOT NULL,
    study_program_id INT UNSIGNED NOT NULL,
    -- biasanya 1, karena study program baru (?)
    status TINYINT DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(institution_id) REFERENCES institutions(id) ON UPDATE CASCADE,
	FOREIGN KEY(study_program_id) REFERENCES study_programs(id) ON UPDATE CASCADE
);

CREATE TABLE study_levels (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    -- unique ?
    name VARCHAR(100) NOT NULL UNIQUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE
);

CREATE TABLE academic_records (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	study_level_id INT UNSIGNED NOT NULL,
	education_location_id INT UNSIGNED NOT NULL,
	institution_study_program_id INT UNSIGNED,
    -- bukannya harus request dlu ya ?
    institution VARCHAR(100),
    study_program VARCHAR(100),
    -- 50 cukup?
    student_id VARCHAR(50) NOT NULL,
    graduate_year YEAR NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(study_level_id) REFERENCES study_levels(id) ON UPDATE CASCADE,
	FOREIGN KEY(education_location_id) REFERENCES education_locations(id) ON UPDATE CASCADE,
	FOREIGN KEY(institution_study_program_id) REFERENCES institution_study_programs(id) ON UPDATE CASCADE
);

-- perlu unique/gak tergantung dari proposal bakal dihapus / gak ketika status selesai (ditolak/diterima)
CREATE TABLE institution_proposals (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	country_id INT UNSIGNED NOT NULL,
    name VARCHAR(100) NOT NULL,
    institution_type_id INT UNSIGNED NOT NULL,
    address VARCHAR(255) NOT NULL,
    city VARCHAR(100) NOT NULL,
    postal_code VARCHAR(10) NOT NULL,
	website VARCHAR(255) NOT NULL,
    email VARCHAR(100) NOT NULL,
    program_study_name VARCHAR(100) NOT NULL,
    is_accepted TINYINT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(country_id) REFERENCES countries(id) ON UPDATE CASCADE,
	FOREIGN KEY(institution_type_id) REFERENCES institution_types(id) ON UPDATE CASCADE
);

CREATE TABLE degrees (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL UNIQUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE
);

CREATE TABLE study_program_proposals (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	country_id INT UNSIGNED NOT NULL,
	institution_id INT UNSIGNED NOT NULL,
	name VARCHAR(100) NOT NULL,
	degree_id INT UNSIGNED,
	degree VARCHAR(100),
    is_accepted TINYINT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(country_id) REFERENCES countries(id) ON UPDATE CASCADE,
	FOREIGN KEY(institution_id) REFERENCES institutions(id) ON UPDATE CASCADE,
	FOREIGN KEY(degree_id) REFERENCES degrees(id) ON UPDATE CASCADE
);

CREATE TABLE directorate_types (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL UNIQUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE
);

CREATE TABLE sk_templates (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	directorate_type_id INT UNSIGNED NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(directorate_type_id) REFERENCES directorate_types(id) ON UPDATE CASCADE
);

CREATE TABLE score_conversions (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    overseas_score_upper_limit FLOAT UNSIGNED NOT NULL,
    overseas_score_lower_limit FLOAT UNSIGNED NOT NULL,
    domestic_score_upper_limit FLOAT UNSIGNED NOT NULL,
    domestic_score_lower_limit FLOAT UNSIGNED NOT NULL,
    grade_average_point FLOAT UNSIGNED NOT NULL,
    -- Result not null ? langusng keluar kah?
    score_conversions_result FLOAT UNSIGNED NOT NULL,
    parent_conversion_id INT UNSIGNED NOT NULL,
    is_denied TINYINT DEFAULT 0,
    finalize_at TIMESTAMP,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(parent_conversion_id) REFERENCES score_conversions(id) ON UPDATE CASCADE
);

CREATE TABLE score_conversion_details (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    score_conversion_id INT UNSIGNED NOT NULL,
    course_name VARCHAR(100) NOT NULL,
    -- mending tiny(1) / small (4)
    credit SMALLINT NOT NULL,
    -- int / float
    score FLOAT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(score_conversion_id) REFERENCES score_conversions(id) ON UPDATE CASCADE
);

CREATE TABLE user_score_conversions (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	user_id INT UNSIGNED NOT NULL,
	score_conversion_id INT UNSIGNED NOT NULL,
    sk_number VARCHAR(50) NOT NULL,
    sk_date DATE NOT NULL,
	institution_study_program_id INT UNSIGNED NOT NULL,
    degree_id INT UNSIGNED NOT NULL,
    directorate_type_id INT UNSIGNED NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(user_id) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(score_conversion_id) REFERENCES score_conversions(id) ON UPDATE CASCADE,
	FOREIGN KEY(institution_study_program_id) REFERENCES institution_study_programs(id) ON UPDATE CASCADE,
	FOREIGN KEY(degree_id) REFERENCES degrees(id) ON UPDATE CASCADE,
	FOREIGN KEY(directorate_type_id) REFERENCES directorate_types(id) ON UPDATE CASCADE
);

CREATE TABLE tuition_payments (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL UNIQUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE
);

CREATE TABLE learning_programs (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL UNIQUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE
);

CREATE TABLE study_modes (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL UNIQUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE
);

CREATE TABLE equalization_purposes (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL UNIQUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE
);

CREATE TABLE jobs (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	name VARCHAR(100) NOT NULL UNIQUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE
);

CREATE TABLE registration_numbers (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    registration_number VARCHAR(50) NOT NULL UNIQUE,
    -- buat apa?
    type VARCHAR(50) NOT NULL,
    ref_table VARCHAR(100) NOT NULL,
    ref_id INT NOT NULL,
    -- bisa null ?
    status TINYINT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE
);

CREATE TABLE logs (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    registration_number_id INT UNSIGNED NOT NULL,
    title VARCHAR(100) NOT NULL,
    description TEXT NOT NULL,
    -- buat apa
    note TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(registration_number_id) REFERENCES registration_numbers(id) ON UPDATE CASCADE
);

CREATE TABLE results (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	registration_number_id INT UNSIGNED NOT NULL,
	speciality_id INT UNSIGNED NOT NULL,
	study_level_id INT UNSIGNED NOT NULL,
    sk_number VARCHAR(50) NOT NULL,
    sk_date DATE NOT NULL,
    status TINYINT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(registration_number_id) REFERENCES registration_numbers(id) ON UPDATE CASCADE,
	FOREIGN KEY(speciality_id) REFERENCES specialities(id) ON UPDATE CASCADE,
	FOREIGN KEY(study_level_id) REFERENCES study_levels(id) ON UPDATE CASCADE
);

CREATE TABLE conversion_results (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	registration_number_id INT UNSIGNED NOT NULL,
	result_id INT UNSIGNED NOT NULL,
    sk_date DATE NOT NULL,
    conversion_result FLOAT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(registration_number_id) REFERENCES registration_numbers(id) ON UPDATE CASCADE,
	FOREIGN KEY(result_id) REFERENCES results(id) ON UPDATE CASCADE
);

CREATE TABLE reequalization_reasons (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    -- cukup gak 100
	reason VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE
);

CREATE TABLE diploma_reequalizations (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	result_id INT UNSIGNED NOT NULL,
	reequalization_reason_id INT UNSIGNED NOT NULL,
	study_level_id INT UNSIGNED NOT NULL,
    -- harus diisi?
    comments TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(result_id) REFERENCES results(id) ON UPDATE CASCADE,
	FOREIGN KEY(reequalization_reason_id) REFERENCES reequalization_reasons(id) ON UPDATE CASCADE,
	FOREIGN KEY(study_level_id) REFERENCES study_levels(id) ON UPDATE CASCADE
);

CREATE TABLE diploma_equalizations (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	equalization_purpose_id INT UNSIGNED NOT NULL,
	user_id INT UNSIGNED NOT NULL,
    user_name VARCHAR(100) NOT NULL,
    place_of_birth VARCHAR(100) NOT NULL,
    date_of_birth DATE NOT NULL,
	institution_study_program_id INT UNSIGNED NOT NULL,
	study_level_id INT UNSIGNED NOT NULL,
	degree_id INT UNSIGNED NOT NULL,
	speciality_id INT UNSIGNED NOT NULL,
	study_mode_id INT UNSIGNED NOT NULL,
	tuition_payment_id INT UNSIGNED NOT NULL,
	learning_program_id INT UNSIGNED NOT NULL,
    academic_certificate_date DATE NOT NULL,
    start_collage DATE NOT NULL,
    end_collage DATE NOT NULL,
    -- bisa lebih dari 9999 > ?
    length_of_stay INT NOT NULL,
    -- Harus text ?
    thesis_title TEXT NOT NULL,
	academic_record_id INT UNSIGNED NOT NULL,
	job_id INT UNSIGNED NOT NULL,
	score_conversion_id INT UNSIGNED NOT NULL,
    submission_date DATE NOT NULL,
    -- default 0 / empty
    verification_count TINYINT,
	-- default 0 / empty
    evaluation_count TINYINT,
	-- default 0 / empty
    validation_count TINYINT,
	parent_proposal_id INT UNSIGNED NOT NULL,
	prev_proposal_id INT UNSIGNED NOT NULL,
    is_draft TINYINT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(equalization_purpose_id) REFERENCES equalization_purposes(id) ON UPDATE CASCADE,
	FOREIGN KEY(user_id) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(institution_study_program_id) REFERENCES institution_study_programs(id) ON UPDATE CASCADE,
	FOREIGN KEY(study_level_id) REFERENCES study_levels(id) ON UPDATE CASCADE,
	FOREIGN KEY(degree_id) REFERENCES degrees(id) ON UPDATE CASCADE,
	FOREIGN KEY(speciality_id) REFERENCES specialities(id) ON UPDATE CASCADE,
	FOREIGN KEY(study_mode_id) REFERENCES study_modes(id) ON UPDATE CASCADE,
	FOREIGN KEY(tuition_payment_id) REFERENCES tuition_payments(id) ON UPDATE CASCADE,
	FOREIGN KEY(learning_program_id) REFERENCES learning_programs(id) ON UPDATE CASCADE,
	FOREIGN KEY(academic_record_id) REFERENCES academic_records(id) ON UPDATE CASCADE,
	FOREIGN KEY(job_id) REFERENCES jobs(id) ON UPDATE CASCADE,
	FOREIGN KEY(score_conversion_id) REFERENCES score_conversions(id) ON UPDATE CASCADE,
	FOREIGN KEY(parent_proposal_id) REFERENCES diploma_equalizations(id) ON UPDATE CASCADE,
	FOREIGN KEY(prev_proposal_id) REFERENCES diploma_equalizations(id) ON UPDATE CASCADE
);

CREATE TABLE conversion_score (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    upper_score FLOAT UNSIGNED NOT NULL,
    lower_score FLOAT UNSIGNED NOT NULL,
    predicate VARCHAR(50) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE
);

CREATE TABLE statuses (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL UNIQUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE
);

CREATE TABLE evaluations (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	user_id INT UNSIGNED NOT NULL,
	diploma_equalization_id INT UNSIGNED NOT NULL,
	speciality_id INT UNSIGNED NOT NULL,
	study_level_id INT UNSIGNED NOT NULL,
    evaluation_date DATE NOT NULL,
    -- buat nullable ?
    comment TEXT,
    status TINYINT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(user_id) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(diploma_equalization_id) REFERENCES diploma_equalizations(id) ON UPDATE CASCADE,
	FOREIGN KEY(speciality_id) REFERENCES specialities(id) ON UPDATE CASCADE,
	FOREIGN KEY(study_level_id) REFERENCES study_levels(id) ON UPDATE CASCADE
);

CREATE TABLE evaluator_opinions (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	user_id INT UNSIGNED NOT NULL,
	diploma_equalization_id INT UNSIGNED NOT NULL,
    -- buat nullable?
    comment TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(user_id) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(diploma_equalization_id) REFERENCES diploma_equalizations(id) ON UPDATE CASCADE
);

CREATE TABLE fields (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    label VARCHAR(100) NOT NULL UNIQUE,
    input_name VARCHAR(100) NOT NULL UNIQUE,
    -- nullable ?
    hint VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE
);

CREATE TABLE verifications (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	user_id INT UNSIGNED NOT NULL,
    ref_table VARCHAR(100) NOT NULL,
    ref_id INT UNSIGNED NOT NULL,
    status TINYINT NOT NULL,
	-- nullable ?
    comment TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(user_id) REFERENCES users(id) ON UPDATE CASCADE
);

CREATE TABLE verification_fields (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	verification_id INT UNSIGNED NOT NULL,
	field_id INT UNSIGNED NOT NULL,
    is_verified TINYINT DEFAULT 0,
    -- ini gimana?
    flag INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(verification_id) REFERENCES verifications(id) ON UPDATE CASCADE,
	FOREIGN KEY(field_id) REFERENCES fields(id) ON UPDATE CASCADE
);

CREATE TABLE validations (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	user_id INT UNSIGNED NOT NULL,
	ref_table VARCHAR(100) NOT NULL,
    ref_id INT UNSIGNED NOT NULL,
    status TINYINT NOT NULL,
    -- nullable ?
    comment TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(user_id) REFERENCES users(id) ON UPDATE CASCADE
);

CREATE TABLE validations_fields (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	validation_id INT UNSIGNED NOT NULL,
	field_id INT UNSIGNED NOT NULL,
    is_verified TINYINT DEFAULT 0,
    -- ini gimana?
    flag INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(validation_id) REFERENCES validations(id) ON UPDATE CASCADE,
	FOREIGN KEY(field_id) REFERENCES fields(id) ON UPDATE CASCADE
);

CREATE TABLE field_mappings (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	field_id INT UNSIGNED NOT NULL,
    slug VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(field_id) REFERENCES fields(id) ON UPDATE CASCADE
);

CREATE TABLE field_comments (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	field_id INT UNSIGNED NOT NULL,
	user_id INT UNSIGNED NOT NULL,
    -- nullable? 
    comment TEXT,
	ref_table VARCHAR(100) NOT NULL,
    ref_id INT UNSIGNED NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NOT NULL,
    PRIMARY KEY(id),
	FOREIGN KEY(created_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(updated_by) REFERENCES users(id) ON UPDATE CASCADE,
	FOREIGN KEY(field_id) REFERENCES fields(id) ON UPDATE CASCADE,
	FOREIGN KEY(user_id) REFERENCES users(id) ON UPDATE CASCADE
);